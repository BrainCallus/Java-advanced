memberSearchIndex = [{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"addWork(ParallelMapperImpl.JobSlice)","url":"addWork(info.kgeorgiy.ja.churakova.mapper.ParallelMapperImpl.JobSlice)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"all(int, List<? extends T>, Predicate<? super T>)","url":"all(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"any(int, List<? extends T>, Predicate<? super T>)","url":"any(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"checkArgs(int)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.JobSlice","l":"checker"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"close()"},{"p":"info.kgeorgiy.java.advanced.mapper","c":"ParallelMapper","l":"close()"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.completeChecker","l":"completeChecker(int)","url":"%3Cinit%3E(int)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.completeChecker","l":"completed"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"count(int, List<? extends T>, Predicate<? super T>)","url":"count(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"execute(int, List<T>, Function<Stream<T>, E>, Function<Stream<E>, E>)","url":"execute(int,java.util.List,java.util.function.Function,java.util.function.Function)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"extractSubtask()"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"filter(int, List<? extends T>, Predicate<? super T>)","url":"filter(int,java.util.List,java.util.function.Predicate)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"getBlocks(List<E>, int)","url":"getBlocks(java.util.List,int)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"getStarted()"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.completeChecker","l":"isCompleted()"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"IterativeParallelism(ParallelMapper)","url":"%3Cinit%3E(info.kgeorgiy.java.advanced.mapper.ParallelMapper)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.JobSlice","l":"JobSlice(Runnable, ParallelMapperImpl.completeChecker)","url":"%3Cinit%3E(java.lang.Runnable,info.kgeorgiy.ja.churakova.mapper.ParallelMapperImpl.completeChecker)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"join(int, List<?>)","url":"join(int,java.util.List)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"launchJob(ParallelMapperImpl.JobSlice)","url":"launchJob(info.kgeorgiy.ja.churakova.mapper.ParallelMapperImpl.JobSlice)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"map(Function<? super T, ? extends R>, List<? extends T>)","url":"map(java.util.function.Function,java.util.List)"},{"p":"info.kgeorgiy.java.advanced.mapper","c":"ParallelMapper","l":"map(Function<? super T, ? extends R>, List<? extends T>)","url":"map(java.util.function.Function,java.util.List)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"map(int, List<? extends T>, Function<? super T, ? extends U>)","url":"map(int,java.util.List,java.util.function.Function)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"mapReduce(int, List<T>, Function<T, R>, AdvancedIP.Monoid<R>)","url":"mapReduce(int,java.util.List,java.util.function.Function,info.kgeorgiy.java.advanced.concurrent.AdvancedIP.Monoid)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"maximum(int, List<? extends T>, Comparator<? super T>)","url":"maximum(int,java.util.List,java.util.Comparator)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"minimum(int, List<? extends T>, Comparator<? super T>)","url":"minimum(int,java.util.List,java.util.Comparator)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"parallelMapper"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"ParallelMapperImpl(int)","url":"%3Cinit%3E(int)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"queue"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"reduce(int, List<T>, AdvancedIP.Monoid<T>)","url":"reduce(int,java.util.List,info.kgeorgiy.java.advanced.concurrent.AdvancedIP.Monoid)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.JobSlice","l":"subtask"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"IterativeParallelism","l":"sumAccum(Long, Long)","url":"sumAccum(java.lang.Long,java.lang.Long)"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl","l":"threads"},{"p":"info.kgeorgiy.ja.churakova.mapper","c":"ParallelMapperImpl.completeChecker","l":"toComplete"}]